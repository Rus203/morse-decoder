const MORSE_TABLE = {
  '.-':     'a',
  '-...':   'b',
  '-.-.':   'c',
  '-..':    'd',
  '.':      'e',
  '..-.':   'f',
  '--.':    'g',
  '....':   'h',
  '..':     'i',
  '.---':   'j',
  '-.-':    'k',
  '.-..':   'l',
  '--':     'm',
  '-.':     'n',
  '---':    'o',
  '.--.':   'p',
  '--.-':   'q',
  '.-.':    'r',
  '...':    's',
  '-':      't',
  '..-':    'u',
  '...-':   'v',
  '.--':    'w',
  '-..-':   'x',
  '-.--':   'y',
  '--..':   'z',
  '.----':  '1',
  '..---':  '2',
  '...--':  '3',
  '....-':  '4',
  '.....':  '5',
  '-....':  '6',
  '--...':  '7',
  '---..':  '8',
  '----.':  '9',
  '-----':  '0',
};


function decode(expr) 
{
  let morseCode = [];

  let convertToSymbol = (nums) =>
    {
      let res = '';

      for(let i = 0; i < nums.length; i = i + 2)
      {
        if(nums[i] === '1' && nums[i + 1] === '0')
        {
          res += '.';
        }

        else if(nums[i] === '1' && nums[i + 1] === '1')
        {
          res += '-';
        }

        else if (nums[i] === '*')
        {
          res = ' ';
        }
      }
      return res;
    }

  let convertToWord = chars => 
  {
    return chars === ' ' ? ' ' : MORSE_TABLE[chars];
  };

  for(let x1 = 0, x2 = 10; x2 <= expr.length; x1 = x1 + 10, x2 = x2 + 10)
  {
    let char = expr.substring(x1, x2);
    morseCode.push(convertToWord(convertToSymbol(char)));
  }
  
  return morseCode.join('');
}

console.log(decode('00101010100000000010001011101000101110100000111111**********00001011110000111111000010111000101110100000111010'));



// 0010101010 0000000010 0010111010 0010111010 0000111111 ********** 0000101111 0000111111 0000101110 0010111010 0000111010
//  10101010      10      10111010   10111010    111111   **********    101111    111111     101110    10111010    111010
//     h          e          l          l           o       space       w           o         r           l          d         